graph TB
  linkStyle default fill:#ffffff

  subgraph diagram ["flarelette-jwt-kit - @chrislyons-dev/flarelette-jwt - Components"]
    style diagram fill:#ffffff,stroke:#ffffff

    subgraph 2 ["@chrislyons-dev/flarelette-jwt"]
      style 2 fill:#ffffff,stroke:#2e6295,color:#2e6295

      3("<div style='font-weight: bold'>core</div><div style='font-size: 70%; margin-top: 0px'>[Component: module]</div><div style='font-size: 80%; margin-top:10px'>CLI utility for generating<br />JWT secrets. This script<br />provides options to generate<br />secrets in various formats,<br />including JSON and dotenv. It<br />is designed to be executed as<br />a standalone Node.js script.<br />| Configuration utilities for<br />JWT operations. This module<br />provides functions to read<br />environment variables and<br />derive JWT-related<br />configurations. It includes<br />support for both symmetric<br />(HS512) and asymmetric<br />(EdDSA) algorithms. | JWT<br />signing utilities. This<br />module provides functions to<br />sign JWT tokens using either<br />HS512 or EdDSA algorithms. It<br />supports custom claims and<br />configuration overrides.</div>")
      style 3 fill:#85bbf0,stroke:#5d82a8,color:#000000
      4("<div style='font-weight: bold'>util</div><div style='font-size: 70%; margin-top: 0px'>[Component: module]</div><div style='font-size: 80%; margin-top:10px'>High-level JWT utilities for<br />creating, delegating,<br />verifying, and authorizing<br />JWT tokens | JSON Web Key Set<br />(JWKS) utilities. This module<br />provides functions to fetch<br />and manage JWKS, including<br />caching and key lookup by key<br />ID (kid). It supports<br />integration with external<br />JWKS services. | Key<br />generation utility for EdDSA<br />keys. This script generates<br />EdDSA key pairs and exports<br />them in JWK format. It is<br />designed to be executed as a<br />standalone Node.js script. |<br />Secret generation and<br />validation utilities. This<br />module provides functions to<br />generate secure secrets and<br />validate base64url-encoded<br />secrets. It ensures<br />compatibility with JWT<br />signing requirements. |<br />Utility functions for JWT<br />operations. This module<br />provides helper functions for<br />parsing JWTs, checking<br />expiration, and mapping OAuth<br />scopes. It is designed to<br />support core JWT<br />functionalities. | JWT<br />verification utilities. This<br />module provides functions to<br />verify JWT tokens using<br />either HS512 or EdDSA<br />algorithms. It supports<br />integration with JWKS<br />services and thumbprint<br />pinning.</div>")
      style 4 fill:#85bbf0,stroke:#5d82a8,color:#000000
      5("<div style='font-weight: bold'>main</div><div style='font-size: 70%; margin-top: 0px'>[Component: module]</div><div style='font-size: 80%; margin-top:10px'>Entry point for the<br />flarelette-jwt library. This<br />module re-exports core<br />functionalities, including<br />signing, verification,<br />utilities, and type<br />definitions. It serves as the<br />main interface for library<br />consumers.</div>")
      style 5 fill:#85bbf0,stroke:#5d82a8,color:#000000
      6("<div style='font-weight: bold'>types</div><div style='font-size: 70%; margin-top: 0px'>[Component: module]</div><div style='font-size: 80%; margin-top:10px'>Type definitions for JWT<br />operations. This module<br />defines types for JWT<br />headers, payloads, profiles,<br />and related structures. It<br />ensures type safety and<br />consistency across the<br />library.</div>")
      style 6 fill:#85bbf0,stroke:#5d82a8,color:#000000
      7("<div style='font-weight: bold'>adapters</div><div style='font-size: 70%; margin-top: 0px'>[Component: module]</div><div style='font-size: 80%; margin-top:10px'>Component inferred from<br />directory: adapters</div>")
      style 7 fill:#85bbf0,stroke:#5d82a8,color:#000000
    end

    4-- "<div>ParsedJwt | JwtPayload |<br />AlgType | Fetcher</div><div style='font-size: 70%'></div>" -->6
    4-- "<div>envMode | getCommon |<br />getHSSecret |<br />getPublicJwkString</div><div style='font-size: 70%'></div>" -->3
    7-- "<div>imports * as kit</div><div style='font-size: 70%'></div>" -->5
    7-- "<div>imports getJwksServiceName</div><div style='font-size: 70%'></div>" -->3
    7-- "<div>WorkerEnv | Fetcher</div><div style='font-size: 70%'></div>" -->6
  end